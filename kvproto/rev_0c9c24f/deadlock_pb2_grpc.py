# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from kvproto.rev_0c9c24f import deadlock_pb2 as kvproto_dot_rev__0c9c24f_dot_deadlock__pb2


class DeadlockStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetWaitForEntries = channel.unary_unary(
        '/deadlock.Deadlock/GetWaitForEntries',
        request_serializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.WaitForEntriesRequest.SerializeToString,
        response_deserializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.WaitForEntriesResponse.FromString,
        )
    self.Detect = channel.stream_stream(
        '/deadlock.Deadlock/Detect',
        request_serializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.DeadlockRequest.SerializeToString,
        response_deserializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.DeadlockResponse.FromString,
        )


class DeadlockServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetWaitForEntries(self, request, context):
    """Get local wait for entries, should be handle by every node.
    The owner should sent this request to all members to build the complete wait for graph.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Detect(self, request_iterator, context):
    """Detect should only sent to the owner. only be handled by the owner.
    The DeadlockResponse is sent back only if there is deadlock detected.
    CleanUpWaitFor and CleanUp doesn't return responses.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeadlockServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetWaitForEntries': grpc.unary_unary_rpc_method_handler(
          servicer.GetWaitForEntries,
          request_deserializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.WaitForEntriesRequest.FromString,
          response_serializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.WaitForEntriesResponse.SerializeToString,
      ),
      'Detect': grpc.stream_stream_rpc_method_handler(
          servicer.Detect,
          request_deserializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.DeadlockRequest.FromString,
          response_serializer=kvproto_dot_rev__0c9c24f_dot_deadlock__pb2.DeadlockResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kvproto.rev_0c9c24f.deadlock.Deadlock', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
